/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientfilm.ui;

import clientfilm.entity.Acteurfilm;
import clientfilm.entity.Copie;
import clientfilm.entity.Film;
import clientfilm.entity.Personnefilm;
import clientfilm.entity.Utilisateur;
import java.awt.Component;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Clob;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListModel;

/**
 *
 * @author Ayduria
 */

class MovieListRenderer extends DefaultListCellRenderer
{
    public Component getListCellRendererComponent(
        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
    {
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

        Film film = (Film)value;
        setText(film.getTitre() + " (" + film.getAnneeparution() + ")");

        return this;
    }
}

class ActorListRenderer extends DefaultListCellRenderer
{
    public Component getListCellRendererComponent(
        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus)
    {
        CourtierDao courtierDao = new CourtierDaoImpl();
        
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

        Acteurfilm selectedActor = (Acteurfilm)value;
        Personnefilm personne = courtierDao.getPersonInfoByActor(selectedActor);

        setText(personne.getPrenom() + " " + personne.getNom() + " - " + selectedActor.getNompersonnage());

        return this;
    }
}

public class LocationFilm extends javax.swing.JFrame {

    /**
     * Creates new form LocationFilm
     */
    public LocationFilm() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        LoginForm = new javax.swing.JPanel();
        LoginButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JPasswordField();
        MainInterface = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SearchMovieButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MovieList = new javax.swing.JList<>();
        MovieTitleField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        MaxReleaseField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        DirectorField = new javax.swing.JTextField();
        LanguageField = new javax.swing.JTextField();
        MinReleaseField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        CountryField1 = new javax.swing.JTextField();
        CountryField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        GenreField1 = new javax.swing.JTextField();
        GenreField2 = new javax.swing.JTextField();
        GenreField3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        ActorField1 = new javax.swing.JTextField();
        ActorField2 = new javax.swing.JTextField();
        ActorField3 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        CountryField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        TitleYearLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LanguageLabel = new javax.swing.JLabel();
        LengthLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ScenarioText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ActorList = new javax.swing.JList<>();
        DirectorLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ScreenwriterList = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        CountryList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        GenreList = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        RentButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        PersonNameLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        BirthdateLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        BirthplaceLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        BiographyText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Location de films");
        setName("frame"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jPanel2.setLayout(new java.awt.CardLayout());

        LoginForm.setBackground(new java.awt.Color(204, 255, 255));

        LoginButton.setText("Se connecter");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Connexion utilisateur");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Adresse courriel:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Mot de passe:");

        javax.swing.GroupLayout LoginFormLayout = new javax.swing.GroupLayout(LoginForm);
        LoginForm.setLayout(LoginFormLayout);
        LoginFormLayout.setHorizontalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel2))
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(46, 46, 46)
                        .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EmailField)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(LoginButton)))
                .addContainerGap(459, Short.MAX_VALUE))
        );
        LoginFormLayout.setVerticalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(jLabel2)
                .addGap(54, 54, 54)
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(LoginButton)
                .addContainerGap(435, Short.MAX_VALUE))
        );

        jPanel2.add(LoginForm, "card2");

        MainInterface.setBackground(new java.awt.Color(204, 255, 204));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Recherche de film");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Titre du film: ");

        SearchMovieButton.setText("Rechercher");
        SearchMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchMovieButtonActionPerformed(evt);
            }
        });

        MovieList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                MovieListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(MovieList);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Année min de sortie:");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Année max de sortie:");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Langue originale du film:");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Nom du réalisateur: ");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Pays de production");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Genre(s)");

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Acteur(s)");

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Liste de films correspondants");

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        TitleYearLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TitleYearLabel.setForeground(new java.awt.Color(255, 255, 255));
        TitleYearLabel.setText("Fiche du film");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        LanguageLabel.setBackground(new java.awt.Color(153, 153, 153));
        LanguageLabel.setForeground(new java.awt.Color(255, 255, 255));

        LengthLabel.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBar(null);

        ScenarioText.setEditable(false);
        ScenarioText.setBackground(new java.awt.Color(102, 102, 102));
        ScenarioText.setColumns(20);
        ScenarioText.setForeground(new java.awt.Color(255, 255, 255));
        ScenarioText.setLineWrap(true);
        ScenarioText.setRows(5);
        ScenarioText.setWrapStyleWord(true);
        ScenarioText.setBorder(null);
        ScenarioText.setFocusable(false);
        jScrollPane3.setViewportView(ScenarioText);

        ActorList.setBackground(new java.awt.Color(51, 51, 51));
        ActorList.setForeground(new java.awt.Color(255, 255, 255));
        ActorList.setSelectionBackground(new java.awt.Color(204, 255, 255));
        ActorList.setSelectionForeground(new java.awt.Color(0, 0, 0));
        ActorList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ActorListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ActorList);

        DirectorLabel.setBackground(new java.awt.Color(0, 0, 0));
        DirectorLabel.setForeground(new java.awt.Color(255, 255, 255));
        DirectorLabel.setToolTipText("");
        DirectorLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DirectorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DirectorLabelMouseClicked(evt);
            }
        });

        ScreenwriterList.setBackground(new java.awt.Color(51, 51, 51));
        ScreenwriterList.setForeground(new java.awt.Color(255, 255, 255));
        ScreenwriterList.setEnabled(false);
        ScreenwriterList.setFocusable(false);
        ScreenwriterList.setSelectionBackground(new java.awt.Color(204, 255, 255));
        ScreenwriterList.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(ScreenwriterList);

        CountryList.setBackground(new java.awt.Color(51, 51, 51));
        CountryList.setForeground(new java.awt.Color(255, 255, 255));
        CountryList.setEnabled(false);
        CountryList.setFocusable(false);
        jScrollPane5.setViewportView(CountryList);

        GenreList.setBackground(new java.awt.Color(51, 51, 51));
        GenreList.setForeground(new java.awt.Color(255, 255, 255));
        GenreList.setEnabled(false);
        GenreList.setFocusable(false);
        jScrollPane6.setViewportView(GenreList);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Acteurs - Personnages");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Scénaristes");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Pays de production");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Genres");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Langue originale:");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Durée:");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Réalisateur:");

        RentButton.setText("Louer le film");
        RentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DirectorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addComponent(LengthLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LanguageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane5)
                                    .addComponent(jScrollPane2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(jScrollPane6)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(289, 289, 289)
                                .addComponent(jLabel10))
                            .addComponent(jLabel9)
                            .addComponent(RentButton)))
                    .addComponent(TitleYearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(124, 124, 124)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LanguageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DirectorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(RentButton)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        PersonNameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        PersonNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        PersonNameLabel.setText("Fiche de l'individu");

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Date de naissance: ");

        BirthdateLabel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Lieu de naissance: ");

        BirthplaceLabel.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane7.setBorder(null);
        jScrollPane7.setHorizontalScrollBar(null);

        BiographyText.setEditable(false);
        BiographyText.setBackground(new java.awt.Color(102, 102, 102));
        BiographyText.setColumns(20);
        BiographyText.setForeground(new java.awt.Color(255, 255, 255));
        BiographyText.setLineWrap(true);
        BiographyText.setRows(5);
        BiographyText.setWrapStyleWord(true);
        BiographyText.setBorder(null);
        jScrollPane7.setViewportView(BiographyText);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BirthdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BirthplaceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(PersonNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PersonNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(BirthdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(BirthplaceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainInterfaceLayout = new javax.swing.GroupLayout(MainInterface);
        MainInterface.setLayout(MainInterfaceLayout);
        MainInterfaceLayout.setHorizontalGroup(
            MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainInterfaceLayout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainInterfaceLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(412, 412, 412))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(MainInterfaceLayout.createSequentialGroup()
                            .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(MainInterfaceLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel18)
                                    .addGap(120, 120, 120)
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel20)
                                    .addGap(113, 113, 113))
                                .addGroup(MainInterfaceLayout.createSequentialGroup()
                                    .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(MainInterfaceLayout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(DirectorField, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(MainInterfaceLayout.createSequentialGroup()
                                                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel16)
                                                    .addGroup(MainInterfaceLayout.createSequentialGroup()
                                                        .addComponent(jLabel14)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(MinReleaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(14, 14, 14)
                                                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(MainInterfaceLayout.createSequentialGroup()
                                                        .addComponent(jLabel15)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(MaxReleaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(LanguageField, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(MovieTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(MainInterfaceLayout.createSequentialGroup()
                                            .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(CountryField2, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(CountryField1, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(CountryField3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(32, 32, 32)
                                            .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(GenreField1)
                                                .addComponent(GenreField2)
                                                .addComponent(GenreField3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(28, 28, 28)
                                            .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(ActorField2)
                                                .addComponent(ActorField3)
                                                .addComponent(ActorField1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel1)
                                        .addGroup(MainInterfaceLayout.createSequentialGroup()
                                            .addGap(228, 228, 228)
                                            .addComponent(SearchMovieButton)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(MainInterfaceLayout.createSequentialGroup()
                            .addGap(238, 238, 238)
                            .addComponent(jLabel21)
                            .addGap(69, 69, 69))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(119, 119, 119))
        );
        MainInterfaceLayout.setVerticalGroup(
            MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainInterfaceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(12, 12, 12)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainInterfaceLayout.createSequentialGroup()
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(MovieTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MaxReleaseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(MinReleaseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LanguageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(DirectorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CountryField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GenreField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ActorField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainInterfaceLayout.createSequentialGroup()
                                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(GenreField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ActorField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MainInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ActorField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GenreField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(MainInterfaceLayout.createSequentialGroup()
                                .addComponent(CountryField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(CountryField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(SearchMovieButton)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(MainInterface, "card3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static DefaultListModel movieListModel = new DefaultListModel();
    public static DefaultListModel actorListModel = new DefaultListModel();
    public static DefaultListModel screenwriterListModel = new DefaultListModel();
    public static DefaultListModel countryListModel = new DefaultListModel();
    public static DefaultListModel genreListModel = new DefaultListModel();
    
    private static String encryptPassword(String password)
    {
        String sha1 = "";
        try
        {
            MessageDigest crypt = MessageDigest.getInstance("SHA-1");
            crypt.reset();
            crypt.update(password.getBytes("UTF-8"));
            sha1 = byteToHex(crypt.digest());
        }
        catch(NoSuchAlgorithmException e)
        {
            e.printStackTrace();
        }
        catch(UnsupportedEncodingException e)
        {
            e.printStackTrace();
        }
        return sha1;
    }

    private static String byteToHex(final byte[] hash)
    {
        Formatter formatter = new Formatter();
        for (byte b : hash)
        {
            formatter.format("%02x", b);
        }
        String result = formatter.toString().toUpperCase();
        formatter.close();
        return result;
    }
    
    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        // TODO add your handling code here:
        CourtierDao courtierDao = new CourtierDaoImpl();
        
        String email = EmailField.getText();
        String password = PasswordField.getText(); 
        
        if (email.equals("") || password.equals("")) {
            JOptionPane.showMessageDialog(LoginForm, "Veuillez remplir tous les champs.");
        } else {
            String hashedPassword = encryptPassword(password);

            int userSize = courtierDao.verifyLogin(email, hashedPassword);

            if (userSize == 1)
            {
                PasswordField.setText("");
                jPanel2.removeAll();
                jPanel2.repaint();
                jPanel2.revalidate();

                jPanel2.add(MainInterface);
                jPanel2.repaint();
                jPanel2.revalidate();
                jPanel3.setVisible(false);
                jPanel4.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(LoginForm, "Identifiants incorrects. Veuillez réessayer.");
            }
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void RentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentButtonActionPerformed
        // TODO add your handling code here:
        CourtierDao courtierDao = new CourtierDaoImpl();
        
        String email = EmailField.getText();

        int index = MovieList.getSelectedIndex();
        ListModel movieListModel = MovieList.getModel();
        Film selectedMovie = (Film) movieListModel.getElementAt(index);

        Utilisateur utilisateur = courtierDao.getUserFromEmail(email);
        boolean locationPossible = courtierDao.locationPossible(utilisateur);
        boolean locationReussie = false;
       
        if (locationPossible) {
            Copie copie = courtierDao.copieDisponible(selectedMovie);
            if (copie != null) {
                Date date = Calendar.getInstance().getTime();
                courtierDao.addLocation(utilisateur, copie, date);
                locationReussie = true;
            }
        }

        if (locationReussie) {
            JOptionPane.showMessageDialog(MainInterface, "Location réussie. Vous devriez recevoir le film par la poste bientôt.");
        } else if (!locationPossible) {
            JOptionPane.showMessageDialog(MainInterface, "Vous avez atteint votre limite de locations. Veuillez retourner une copie pour en louer une autre.");
        } else {
            JOptionPane.showMessageDialog(MainInterface, "Il ne reste plus de copies disponibles pour ce film. Réessayez plus tard.");
        }
    }//GEN-LAST:event_RentButtonActionPerformed

    private void DirectorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DirectorLabelMouseClicked
        // TODO add your handling code here:
        CourtierDao courtierDao = new CourtierDaoImpl();
            
        jPanel4.setVisible(true);

        String directorName = DirectorLabel.getText();
        String[] directorNameArray = directorName.split(" ");

        Personnefilm personne = courtierDao.getDirectorByName(directorNameArray);

        displayPersonInfo(personne);
    }//GEN-LAST:event_DirectorLabelMouseClicked

    private void ActorListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ActorListValueChanged
        // TODO add your handling code here:
        CourtierDao courtierDao = new CourtierDaoImpl();

        if (ActorList.getSelectedValue() != null) {
            jPanel4.setVisible(true);

            int index = ActorList.getSelectedIndex();
            ListModel actorListModel = ActorList.getModel();
            Acteurfilm selectedActor = (Acteurfilm) actorListModel.getElementAt(index);

            Personnefilm personne = courtierDao.getPersonInfoByActor(selectedActor);

            displayPersonInfo(personne);
        }
    }//GEN-LAST:event_ActorListValueChanged

    private void MovieListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MovieListValueChanged
        // TODO add your handling code here:
        if (!evt.getValueIsAdjusting()) {//This line prevents double events
            CourtierDao courtierDao = new CourtierDaoImpl();
        
            if (MovieList.getSelectedValue() != null) {
                jPanel3.setVisible(true);
                jPanel4.setVisible(false);
                actorListModel.clear();
                screenwriterListModel.clear();
                countryListModel.clear();
                genreListModel.clear();

                int index = MovieList.getSelectedIndex();
                ListModel movieListModel = MovieList.getModel();
                Film selectedMovie = (Film) movieListModel.getElementAt(index);

                String realisateur = courtierDao.displayMovieInfo(selectedMovie);

                TitleYearLabel.setText(selectedMovie.getTitre() + " (" + selectedMovie.getAnneeparution() + ")");
                LanguageLabel.setText(selectedMovie.getLangueoriginale());
                LengthLabel.setText(selectedMovie.getDuree() + " minutes");
                DirectorLabel.setText(realisateur);
                ActorList.setModel(actorListModel);
                ActorList.setCellRenderer(new ActorListRenderer());
                ScreenwriterList.setModel(screenwriterListModel);
                CountryList.setModel(countryListModel);
                GenreList.setModel(genreListModel);

                try {
                    Clob clob = selectedMovie.getResumescenario();
                    String scenario = clob.getSubString(1, (int) clob.length());
                    ScenarioText.setText(scenario);
                } catch (SQLException e) {
                    System.out.println("Clob exception");
                }
            }
        }
       
    }//GEN-LAST:event_MovieListValueChanged

    private void SearchMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMovieButtonActionPerformed
        // TODO add your handling code here:
        CourtierDao courtierDao = new CourtierDaoImpl();

        MovieList.clearSelection();
        ActorList.clearSelection();
        movieListModel.clear();
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);

        boolean allFieldsEmpty = true;
        boolean movieFound = false;
        boolean invalidEntry = false;
        
        String title = MovieTitleField.getText();
        String minRelease = MinReleaseField.getText();
        String maxRelease = MaxReleaseField.getText();
        String language = LanguageField.getText();
        String director = DirectorField.getText();
        
        if ((!minRelease.matches("[0-9]+") && !minRelease.equals("")) || (!maxRelease.matches("[0-9]+") && !maxRelease.equals("")))
            invalidEntry = true;
        
        if (!invalidEntry) {
           ArrayList<JTextField> allFields = new ArrayList<>();
           allFields.add(MovieTitleField);
           allFields.add(MinReleaseField);
           allFields.add(MaxReleaseField);
           allFields.add(LanguageField);
           allFields.add(DirectorField);
           allFields.add(CountryField1);
           allFields.add(CountryField2);
           allFields.add(CountryField3);
           allFields.add(GenreField1);
           allFields.add(GenreField2);
           allFields.add(GenreField3);
           allFields.add(ActorField1);
           allFields.add(ActorField2);
           allFields.add(ActorField3);

           for (JTextField field : allFields) {
               if (!field.getText().equals("")) {
                   allFieldsEmpty = false;
                   break;
               }
           }
           
           if (!allFieldsEmpty) {
                ArrayList<JTextField> countryFields = new ArrayList<>();
                ArrayList<JTextField> filledCountryFields = new ArrayList<>();
                countryFields.add(CountryField1);
                countryFields.add(CountryField2);
                countryFields.add(CountryField3);
                ArrayList<JTextField> genreFields = new ArrayList<>();
                ArrayList<JTextField> filledGenreFields = new ArrayList<>();
                genreFields.add(GenreField1);
                genreFields.add(GenreField2);
                genreFields.add(GenreField3);
                ArrayList<JTextField> actorFields = new ArrayList<>();
                ArrayList<JTextField> filledActorFields = new ArrayList<>();
                actorFields.add(ActorField1);
                actorFields.add(ActorField2);
                actorFields.add(ActorField3);
                
                for (JTextField country : countryFields) {
                    if (!country.getText().equals(""))
                    filledCountryFields.add(country);
                }

                for (JTextField genre : genreFields) {
                    if (!genre.getText().equals(""))
                    filledGenreFields.add(genre);
                }

                for (JTextField actor : actorFields) {
                    if (!actor.getText().equals(""))
                    filledActorFields.add(actor);
                }
                
                movieFound = courtierDao.searchMovie(title, minRelease, maxRelease, language, director, filledCountryFields, filledGenreFields, filledActorFields);
                
                if (movieFound) {
                    MovieList.setModel(movieListModel);
                    MovieList.setCellRenderer(new MovieListRenderer());
                } else {
                    JOptionPane.showMessageDialog(MainInterface, "Aucun film ne correspond à vos critères.");
                }
           } else {
                JOptionPane.showMessageDialog(MainInterface, "Veuillez entrer au moins un critère de recherche.");
           }
        } else {
            JOptionPane.showMessageDialog(MainInterface, "Les valeurs d'années doivent être numériques.");
        }
    }//GEN-LAST:event_SearchMovieButtonActionPerformed

    private void displayPersonInfo(Personnefilm personne) {
        PersonNameLabel.setText(personne.getPrenom() + " " + personne.getNom());
        BirthdateLabel.setText(personne.getDatenaissance().toString());
        BirthplaceLabel.setText(personne.getLieunaissance());
        
        try {
            Clob clob = personne.getCourtebiographie();
            String biographie = clob.getSubString(1, (int) clob.length());
            BiographyText.setText(biographie);
        } catch (SQLException e) {
            System.out.println("Clob exception");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocationFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocationFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocationFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocationFilm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocationFilm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ActorField1;
    private javax.swing.JTextField ActorField2;
    private javax.swing.JTextField ActorField3;
    private javax.swing.JList<String> ActorList;
    private javax.swing.JTextArea BiographyText;
    private javax.swing.JLabel BirthdateLabel;
    private javax.swing.JLabel BirthplaceLabel;
    private javax.swing.JTextField CountryField1;
    private javax.swing.JTextField CountryField2;
    private javax.swing.JTextField CountryField3;
    private javax.swing.JList<String> CountryList;
    private javax.swing.JTextField DirectorField;
    private javax.swing.JLabel DirectorLabel;
    private javax.swing.JTextField EmailField;
    private javax.swing.JTextField GenreField1;
    private javax.swing.JTextField GenreField2;
    private javax.swing.JTextField GenreField3;
    private javax.swing.JList<String> GenreList;
    private javax.swing.JTextField LanguageField;
    private javax.swing.JLabel LanguageLabel;
    private javax.swing.JLabel LengthLabel;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginForm;
    private javax.swing.JPanel MainInterface;
    private javax.swing.JTextField MaxReleaseField;
    private javax.swing.JTextField MinReleaseField;
    private javax.swing.JList<String> MovieList;
    private javax.swing.JTextField MovieTitleField;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PersonNameLabel;
    private javax.swing.JButton RentButton;
    private javax.swing.JTextArea ScenarioText;
    private javax.swing.JList<String> ScreenwriterList;
    private javax.swing.JButton SearchMovieButton;
    private javax.swing.JLabel TitleYearLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}